<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>ubuntu - Tag - Blog</title>
        <link>https://sudo.by/tags/ubuntu/</link>
        <description>ubuntu - Tag - Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 12 Jun 2022 17:55:47 &#43;0800</lastBuildDate><atom:link href="https://sudo.by/tags/ubuntu/" rel="self" type="application/rss+xml" /><item>
    <title>What Is Sudo</title>
    <link>https://sudo.by/what-is-sudo/</link>
    <pubDate>Sun, 12 Jun 2022 17:55:47 &#43;0800</pubDate>
    <author>Tristan</author>
    <guid>https://sudo.by/what-is-sudo/</guid>
    <description><![CDATA[注意本文环境基于Ubuntu20.04系统既然本站域名包含sudo，那么大家就一起了解下sudo这个命令吧。
sudo这个程序，是由 Bob Coggeshall 和 Cliff Spencer 在上世纪80年左右在一台运行4.1 BSD的机器VAX-11/750上实现的。在随后的岁月中，逐渐演变成了现在的样子。
首先，当你安装Ubuntu的桌面版或者服务器版本的过程中，系统会让用户输入一个用户名以及密码（很多VPS默认使用root用户），而用户输入的用户名不能是root，这是因为Ubuntu系统中root用户是自带的，并且在你安装好系统后，root用户默认是非激活状态，这也就是有些人在刚装好系统后不知道我的root用户默认密码是多少的原因。
如果实在想激活root用户，执行 sudo -i ，然后执行 passwd 设置个密码就激活了root用户。
如果后悔了，可以运行 sudo passwd -dl root 就可以disable root用户了。运行 su 会发现，进不去root用户。
那么如何使用root的权限来执行命令呢？sudo可以解决这个问题。其实当你进入刚刚安装好的系统后，Ubuntu默认将你创建的用户加入到了sudo用户组，也就是拥有了root的所有权限。
1. 举个栗子 我们通过个例子来说一下，在我的机器上已经有一个叫 test 的用户，并且在sudo组当中，所以test用户可以执行root的所有可执行的命令。
1.1 创建用户 首先在机器上先添加一个叫tristan的用户，执行 sudo adduser tristan ,输入密码后一路回车，然后执行 su - tristan 来切换到刚刚创建的用户tristan，接着执行 sudo apt update ，可以看到，新创建的tristan用户是无法使用root权限的，因为不在sudo用户组当中，执行groups可以看到tristan仅仅在tristan这个用户组当中。
1.2 拉人入伙 此时，切换回有sudo权限的用户 su - test，执行 sudo groups tristan ，可以看到tristan只在他自己的组当中，然后执行 sudo adduser tristan sudo 或者 sudo usermod -aG sudo tristan 来将tristan这个用户加入到sudo组当中，再次执行 sudo groups tristan ，可以看到tristan这个用户已经被加入到了sudo组中，拥有了root权限。]]></description>
</item>
<item>
    <title>Setting up your own Matrix Synapse  service on VPS</title>
    <link>https://sudo.by/setting-up-your-own-matrix-synapse-service-on-vps/</link>
    <pubDate>Tue, 24 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Tristan</author>
    <guid>https://sudo.by/setting-up-your-own-matrix-synapse-service-on-vps/</guid>
    <description><![CDATA[For the past one month, I&rsquo;ve been digging around the internet about the decentralized fediverse community. Platforms like Mastodon, Matrix Synapse, Pixelfed etc are the open-source implementations of twitter, IMs like telegram Signal and instagram, and more importantly these platforms are all decentralized, which means your posts/pics/blog/account belongs to yourself, and won&rsquo;t be deleted by those BIG companies for no reason, especially those stupid companies in China like weibo, bilibili, douyin etc.]]></description>
</item>
<item>
    <title>降低CPU使用率 让Plex客户端解码</title>
    <link>https://sudo.by/%E9%99%8D%E4%BD%8Ecpu%E4%BD%BF%E7%94%A8%E7%8E%87-%E8%AE%A9plex%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%A7%A3%E7%A0%81/</link>
    <pubDate>Thu, 09 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author>Tristan</author>
    <guid>https://sudo.by/%E9%99%8D%E4%BD%8Ecpu%E4%BD%BF%E7%94%A8%E7%8E%87-%E8%AE%A9plex%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%A7%A3%E7%A0%81/</guid>
    <description><![CDATA[1. 硬件介绍 Plex给人的印象是需要服务器端转码，这给很多人造成了错误的印象，前几天入手了终身Plex Pass，随即折腾起来，发现Plex完全可以像Kodi一样使用客户端解码，降低服务器端的CPU占用率，加上Plex本身漂亮的UI界面和强大的数据刮削能力，Plex在Emby(收费), Jellyfin(全免费), 和Kodi(全免费，太丑，弃)的竞争中，完全不落下风。
我的硬件：一台小的Home Box，配置是i3-7100u(Intel Kaby Lake), 8G内存。一台家用NAS，QNAP NAS 453B mini一台，10G内存, 处理器是J3455(Intel Apollo Lake), 8G内存。
处理器是i3-7100的Home Box安装了Esxi，上面安装了Openwrt和Ubuntu server（ubuntu里又装了Plex服务器端）以及其它系统。也就是所说的软路由中安装Plex服务器。
Ubuntu server和QNAP上都安装了Plex server，这里使用Ubuntu中的Plex server来测试，NAS仅仅作为一个存储设备。
i3-7100U的核显是HD 620, 而QNAP NAS的处理器是J3455，核显是HD 500。两款核显均支持4K分辨率下H.264的转码transcoding（包括解码decoding和编码encoding），而对于, H.265(HEVC)编码，只有HD620的也就是7100u支持转码，J3455仅仅支持解码（支持播放）。具体核显的性能区别可以看这里以及这里。所以不论是自己组件NAS还是购买现成的NAS，CPU是非常关键的，CPU越新，核显越新，才能更大幅度的降低CPU的使用率。
2.开始 2.1 软路由Ubuntu系统挂载NAS硬盘 首先在Ubuntu中挂载NAS中共享的电影文件夹：
1 2 3 4 5 apt install nfs-common #安装nfs showmount -e 192.168.1.99 #看下nas哪些目录是共享可挂载的。 mkdir /mnt/qnap #在ubuntu中创建文件夹qnap，用来挂在qnap的共享文件夹 mount 192.168.1.99:/电影共享 /mnt/qnap #将nas共享的电影共享目录挂在到linux的qnap目录上。 apt install ffmpeg intel-gpu-tools #安装解码器和查看intel显卡占用率程序 2.2 显卡直通设置 ESXI中先允许核显直通修改Ubuntu server的显卡信息，将默认的修改为FALSE修改Ubuntu配置，添加PCI设备，然后选择刚才直通的显卡即可进入Ubuntu后，运行lspci | grep -i vga，发现核显直通成功随后安装Plex的Ubuntu服务器端和手机或者PC的客户端，此处略过&hellip;，需要注意的是，媒体文件夹选择刚才挂载的NAS文件夹即可。]]></description>
</item>
</channel>
</rss>
